require(Modules.ASR); // –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–æ–¥—É–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏ (ASR)

// üîπ –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è–º–∏
class EventEmitter {
  constructor() {
    this.events = {};
  }

  // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ
  on(event, listener) {
    if (!this.events[event]) {
      this.events[event] = [];
    }
    this.events[event].push(listener);
  }

  // –í—ã–∑–æ–≤ —Å–æ–±—ã—Ç–∏—è
  emit(event, ...args) {
    if (this.events[event]) {
      this.events[event].forEach(listener => {
        listener(...args);
      });
    }
  }

  // –û—Ç–ø–∏—Å–∫–∞ –æ—Ç —Å–æ–±—ã—Ç–∏—è
  off(event, listener) {
    if (this.events[event]) {
      this.events[event].filter(l => l !== listener);
    }
  }

  // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ —Å –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω—ã–º —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ–º
  once(event, listener) {
    const onceListener = (...args) => {
      listener(...args);
      this.off(event, onceListener);
    };
    this.on(event, onceListener);
  }
}

class Player extends EventEmitter {
    constructor() {
        super();
        this.queue = [];  // –ú–∞—Å—Å–∏–≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —á–∞–Ω–∫–æ–≤
        this.status = false; // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–ª–µ–µ—Ä–∞
    }

    play() {
        if (!this.status) {
            this.status = true;
            this.emit('play');
        }
    }

    stop() {
        if (this.status) {
            this.status = false;
            this.emit('stop');
        }
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø–ª–µ–µ—Ä –≤ –æ—á–µ—Ä–µ–¥—å
    add(chank) {
        this.queue.push(chank);
        this.emit('added', chank); // –õ–æ–≥–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
        Logger.write("üéµ –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —á–∞–Ω–∫ –≤ –æ—á–µ—Ä–µ–¥—å: " + chank);
    }

    // –£–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –æ—á–µ—Ä–µ–¥–∏
    remove() {
        const chank = this.queue.shift();
        if (chank) {
            this.emit('removed', chank);
            Logger.write("üóë –£–¥–∞–ª—ë–Ω —á–∞–Ω–∫ –∏–∑ –æ—á–µ—Ä–µ–¥–∏: " + chank);
        }
        return chank;
    }

    // –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ–º –æ—á–µ—Ä–µ–¥—å
    clear() {
        if (this.queue.length > 0) {
            this.queue = [];
            this.emit('cleared');
            Logger.write("üöÆ –û—á–µ—Ä–µ–¥—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞");
        }
    }

    toggle() {
        this.status ? this.stop() : this.play();
    }

    get isPlaying() {
        return this.status;
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–ª–∏–Ω—É –æ—á–µ—Ä–µ–¥–∏
    get length() {
        return this.queue.length;
    }
}

// üîπ –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
var call, player, asr;
const defaultVoice = VoiceList.TBank.ru_RU_Alyona;
const wsUrl = 'wss://voximplant.onrender.com/ws';

var wsReady = false; // –§–ª–∞–≥ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ WebSocket
const voicePlayer = new Player();

// –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ (–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —á–∞–Ω–∫–∞)
voicePlayer.on('removed', (text) => {
    playNextChunk(text); // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —á–∞–Ω–∫
});

// üîπ –§—É–Ω–∫—Ü–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —á–∞–Ω–∫–∞
async function playNextChunk(text) {
    Logger.write("‚ñ∂Ô∏è –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ: " + text);

    player = VoxEngine.createTTSPlayer(text, {
        language: defaultVoice
    });
    player.sendMediaTo(call);

    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–ª–∞–π–µ—Ä
    voicePlayer.on('stop', () => {
        player.stop();
    });

    // –°–æ–±—ã—Ç–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
    player.addEventListener(PlayerEvents.PlaybackFinished, () => {
        Logger.write("üîö –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: " + text);
        voicePlayer.remove(); // –£–¥–∞–ª—è–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥—ë–Ω–Ω—ã–π —á–∞–Ω–∫
    });
}

// üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–µ–≥–æ –≤—ã–∑–æ–≤–∞
VoxEngine.addEventListener(AppEvents.CallAlerting, (e) => {
    call = e.call;
    Logger.write("üìû –í—Ö–æ–¥—è—â–∏–π –≤—ã–∑–æ–≤: " + call.id);

    // –°–æ–∑–¥–∞–Ω–∏–µ ASR –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏
    asr = VoxEngine.createASR({
        profile: ASRProfileList.TBank.ru_RU,
        singleUtterance: true // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    });

    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket-—Å–µ—Ä–≤–µ—Ä—É
    const socket = VoxEngine.createWebSocket(wsUrl);
    Logger.write("üåê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket...");

    // WebSocket –æ—Ç–∫—Ä—ã—Ç
    socket.addEventListener(WebSocketEvents.OPEN, () => {
        wsReady = true;
        Logger.write("‚úÖ WebSocket –ø–æ–¥–∫–ª—é—á—ë–Ω!");
    });

    // WebSocket –ø–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
    socket.addEventListener(WebSocketEvents.MESSAGE, (event) => {
        Logger.write("üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç WebSocket: " + event.text);
        if (event.text) {
            voicePlayer.add(event.text); // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ –æ—á–µ—Ä–µ–¥—å

            // –ï—Å–ª–∏ —É–∂–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Ç–µ–∫—Å—Ç ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π —á–∞–Ω–∫
            if (!voicePlayer.isPlaying) {
                voicePlayer.play();
                voicePlayer.remove();
            }
        }
    });

    // WebSocket –æ—à–∏–±–∫–∞
    socket.addEventListener(WebSocketEvents.ERROR, (event) => {
        Logger.write("‚ùå WebSocket –æ—à–∏–±–∫–∞: " + JSON.stringify(event));
    });

    // WebSocket –∑–∞–∫—Ä—ã—Ç
    socket.addEventListener(WebSocketEvents.CLOSE, () => {
        wsReady = false;
        Logger.write("üî¥ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ.");
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ ASR-—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (—Ç.–µ. –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ä–µ—á–∏ –≤ —Ç–µ–∫—Å—Ç)
    asr.addEventListener(ASREvents.Result, (e) => {
        Logger.write("üé§ ASR —Ä–∞—Å–ø–æ–∑–Ω–∞–ª: " + e.text);

        if (e.text) {
            if (wsReady) {
                socket.send(e.text);
                voicePlayer.stop();
                voicePlayer.clear(); // –û—á–∏—â–∞–µ–º –æ—á–µ—Ä–µ–¥—å –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
                Logger.write("üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ WebSocket: " + e.text);
            } else {
                Logger.write("‚ö†Ô∏è WebSocket –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.");
            }
        }
    });

    // üîπ –ì–æ–ª–æ—Å–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –≤—ã–∑–æ–≤–∞
    call.addEventListener(CallEvents.Connected, () => {
        Logger.write("‚úÖ –í—ã–∑–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω.");
        player = VoxEngine.createTTSPlayer('–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ, –í—ã –ø–æ–∑–≤–æ–Ω–∏–ª–∏ –≤ –∫–æ–º–ø–∞–Ω–∏—é ai-one, —á–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?', {
            language: defaultVoice
        });
        player.sendMediaTo(call);

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ—Ç–∫—É –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ ASR
        player.addMarker(-300);

        // –ü—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –º–∞—Ä–∫–µ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ–ª–æ—Å –≤ ASR
        player.addEventListener(PlayerEvents.PlaybackMarkerReached, () => {
            Logger.write("üéô –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—É–¥–∏–æ –≤ ASR...");
            call.sendMediaTo(asr);
        });
    });

    // üîπ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—ã–∑–æ–≤–∞
    call.addEventListener(CallEvents.Disconnected, () => {
        Logger.write("üîö –í—ã–∑–æ–≤ –∑–∞–≤–µ—Ä—à—ë–Ω.");
        VoxEngine.terminate(); // –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
    });

    // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –≤—Ö–æ–¥—è—â–∏–π –≤—ã–∑–æ–≤
    call.answer();
});
